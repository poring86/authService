# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: mattberserk
# "service" is the name of this project. This will also be added to your AWS resource names.
service: authService

provider:
  name: aws
  runtime: nodejs22.x
  region: us-east-1
  environment:
    CLIENT_ID: ${ssm:/CLIENT_ID}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - arn:aws:dynamodb:us-east-1:958313499473:table/Users

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table #Defines a dynamodb table resource
      Properties:
        TableName: Users #name of the table were users are going to be stored
        BillingMode: PAY_PER_REQUEST #Automaticaly scales read/write capacity base on usage
        AttributeDefinitions:
          - AttributeName: userId #The partition key(unique identifier for each user)
            AttributeType: S # "s" means String data type
        KeySchema:
          - AttributeName: userId #Defines userId as the primary  key
            KeyType: HASH #HASH indicates its's the  partition key

functions:
  signUp:
    handler: handlers/signUp.signUp
    events:
      - httpApi:
          path: /signUp
          method: post
  confirmSignUp:
    handler: handlers/confirmSignUp.confirmSignUp
    events:
      - httpApi:
          path: /confirmSignUp
          method: post
  signIn:
    handler: handlers/signIn.signIn
    events:
      - httpApi:
          path: /sign-in
          method: post
  signOut:
    handler: handlers/signOut.signOut
    events:
      - httpApi:
          path: /sign-out
          method: post
